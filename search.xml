<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HexoBlog建站流程</title>
      <link href="/2022/03/21/HexoBlog%E5%BB%BA%E7%AB%99%E6%B5%81%E7%A8%8B/"/>
      <url>/2022/03/21/HexoBlog%E5%BB%BA%E7%AB%99%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-GitHub-搭建个人博客"><a href="#Hexo-GitHub-搭建个人博客" class="headerlink" title="Hexo+GitHub 搭建个人博客"></a>Hexo+GitHub 搭建个人博客</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>最近看到了同学写的个人网站<a href="https://magidrag0n.github.io/">https://magidrag0n.github.io/</a>  ，感觉很有意思，便打算自己也弄一个玩玩，虽然参考了同学写的教程<a href="https://magidrag0n.github.io/2020/07/16/HexoBlog-OnlineInTen/">https://magidrag0n.github.io/2020/07/16/HexoBlog-OnlineInTen/</a>   和网上的教程，但还是踩了不少雷，这里再总结一下教程，提醒自己也方便下大家。</li></ul><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="GitHub-Pages-是什么？"><a href="#GitHub-Pages-是什么？" class="headerlink" title="# GitHub Pages 是什么？"></a># GitHub Pages 是什么？</h3><ul><li><a href="https://link.zhihu.com/?target=https://help.github.com/en/articles/what-is-github-pages">What is GitHub Pages? - GitHub Help</a></li></ul><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p><h3 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="# Hexo 是什么？"></a># Hexo 是什么？</h3><ul><li>官网：<a href="https://link.zhihu.com/?target=https://hexo.io/zh-cn/">hexo.io</a></li></ul><p>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p><h3 id="Hexo-GitHub-文章发布原理"><a href="#Hexo-GitHub-文章发布原理" class="headerlink" title="# Hexo + GitHub 文章发布原理"></a># Hexo + GitHub 文章发布原理</h3><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="# Node.js"></a># Node.js</h3><p>Node.js是一个让JavaScript运行在服务端的开发平台,用它可以方便地搭建响应速度快、易于扩展的网络应用</p><h3 id="npm"><a href="#npm" class="headerlink" title="# npm"></a># npm</h3><p>npm(Node Package Manager)其实就是包管理工具，对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li><p>需要用到Github账号、node.js、npm</p></li><li><p>新版的Node.js已自带npm</p><p>安装完毕后在命令行输入:node -v，检查是否成功安装、命令行中输入 npm -v，检查 npm 包管理器是否存在</p><p>如果显示’xxx’ 不是内部或外部命令，也不是可运行的程序或批处理文件时。请将node.js加入系统变量，或直接在命令前加上npx，npx 的原理很简单，就是运行的时候，会到<code>node_modules/.bin</code>路径和环境变量<code>$PATH</code>里面，检查命令是否存在。如果模块存在，就使用。如果不存在，就临时下载，用完就删除。</p></li><li><p>安装hexo博客框架</p><p>首先将命令行当前文件夹切换到一个新的空文件夹 (不建议中文) 当中</p><p>然后在命令行中输入：npm install -g hexo-cli</p></li><li><p>安装 Git 推送套件：</p><p>在你创好的放hexo框架的文件夹中打开cmd(没特别说明后文的所有指令都是在此路径执行)，在命令行输入:npm install –save hexo-deployer-git。Tips：安装完成后会有一项 Warning 提醒，不用担心，敬请忽略</p></li><li><h3 id="快速开始："><a href="#快速开始：" class="headerlink" title="快速开始："></a>快速开始：</h3><p>命令行中输入：</p><p><code>hexo init</code>  (报错请尝试在前面加npx，后面所有关于hexo的命令都可以加npx)</p><p>此步骤会自动克隆一个 Landscape 的主题博客，并且你将在你的博客目录下看到自动生成的文件</p><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul></li><li><h3 id="启动本地博客服务器："><a href="#启动本地博客服务器：" class="headerlink" title="启动本地博客服务器："></a>启动本地博客服务器：</h3><p>在命令行中输入：</p><p><code>hexo generate</code>  # 生成静态页面，可以用hexo g缩写</p><p><code>hexo server</code>  # 启动预览，可以用hexo s缩写</p><p>将会提示你：</p><p><code>INFO Start processing.</code><br><code>INFO Hexo is running at http://localhost:4000.Press Ctrl+C to stop.</code></p><p>表示我们的博客已经部署到本地服务器上了，此时在浏览器中输入 <a href="http://localhost:4000/">http://localhost:4000</a> 便可查看你的博客！</p><p><img src="/2022/03/21/HexoBlog%E5%BB%BA%E7%AB%99%E6%B5%81%E7%A8%8B/3.jpg"></p><p>其中的自带的博文包含了一些简易的操作指令与讲解</p><p><strong>Tips：</strong>如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 <code>hexo s -p 5000</code> 更改端口号后重试。</p><h2 id="Hexo-的-Github-上线"><a href="#Hexo-的-Github-上线" class="headerlink" title="Hexo 的 Github 上线"></a>Hexo 的 Github 上线</h2><p>刚才建立的网站只能在本地服务器中查看，即便拿出手机输入相同网址亦是不能查看的。我们需要让好朋友们看到我们的网站，就需要将博客服务器从本地局域服务器推送到云端服务器，我们可以用GitHub Pages来完成，让所有人都可以访问。</p><ul><li><p>使用你刚才创建的Github账户，在主页右上角找到新建项目<strong>New repository</strong></p><p><img src="https://cdn.jsdelivr.net/gh/MagiDrag0n/PicBed/img/guide1.png"></p><p>并建立一个与你名称相同前缀的项目名**(YourName.github.io)**</p><p>此处因为我已经创建过所以不能重复创建，你可直接点 <strong>Create repository</strong></p><p><img src="https://cdn.jsdelivr.net/gh/MagiDrag0n/PicBed/img/guide2.png"></p><p><img src="/2022/03/21/HexoBlog%E5%BB%BA%E7%AB%99%E6%B5%81%E7%A8%8B/2.png"></p><p>在创建好的仓库中点击Settings，选择Pages，在Source下可以选择你Github Pages所需的资源从哪里来。注:如果修改成main，在_config.yml文件末端要同步修改成branch: main。</p></li><li><h3 id="配置Git推送套件"><a href="#配置Git推送套件" class="headerlink" title="配置Git推送套件"></a>配置Git推送套件</h3><p>打开你创建的博客目录文件夹，找到_config.yml这个文件并打开编辑</p><p><img src="https://cdn.jsdelivr.net/gh/MagiDrag0n/PicBed/img/guide3.png"></p><p>在代码末尾添加：</p><p><code>deploy:</code></p><p> <code>type: &#39;git&#39;</code></p><p> <code>repo: &quot;https://github.com/你的名字/你的名字.github.io.git&quot;</code></p><p> <code>branch: &quot;master&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/MagiDrag0n/PicBed/img/guide4.png"></p><p>至此Git推送套件已准备就绪</p><p>git有时会抽风，上传不到master分支，可以换成main分支，再修改GitHub Pages中的对应内容</p></li></ul></li><li><p>第一次使用GIt要先在命令行中输入：</p><p><code>git config --global user.email &quot;you@example.com&quot;</code>  (你的Github邮箱)<br><code>git config --global user.name &quot;Your Name&quot;</code>  (你的Github名称)</p><p>然后输入<code>hexo deploy</code> 部署文章，也可以用缩写hexo d</p><p>此时会哗啦啦流淌一行行提示，并会让你输入你的Github名称与密码</p><p>当提示结束时，便可进入网页 你的名称.github.io 查看你的博客啦！</p><p>如果输入hexo d报错，有可能是当前网络链接不太好，可以多试几次和清除代理或翻墙</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><ul><li><h3 id="博客内容的倡议"><a href="#博客内容的倡议" class="headerlink" title="博客内容的倡议"></a>博客内容的倡议</h3></li></ul><p>不能传播危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的内容。</p><p>不能散布谣言，扰乱社会秩序，破坏社会稳定。</p><p>不能散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪。</p><p>不能侮辱或者诽谤他人，侵害他人合法权益。</p><p>——《互联网信息服务管理办法》节选</p><h4 id="我们要约束自己的行为，因为这关乎所有人的互联网自由。"><a href="#我们要约束自己的行为，因为这关乎所有人的互联网自由。" class="headerlink" title="我们要约束自己的行为，因为这关乎所有人的互联网自由。"></a><strong>我们要约束自己的行为，因为这关乎所有人的互联网自由。</strong></h4><ul><li><h3 id="博客访问地址"><a href="#博客访问地址" class="headerlink" title="博客访问地址"></a>博客访问地址</h3><p><a href="https://localhost:4000/">https://localhost:4000</a>  (本地服务器开启可访问)</p><p><a href>YourName.github.io</a>  (随时随地访问最近一次推送版本的博客)</p></li><li><h3 id="常用Hexo指令"><a href="#常用Hexo指令" class="headerlink" title="常用Hexo指令"></a>常用Hexo指令</h3><p><code>hexo clean</code>  (清除缓存)</p><p><code>hexo g</code>  (迭代博客内容，每次编辑后操作)</p><p><code>hexo d</code>  (推送至github服务器)</p><p><code>hexo new page &quot;XXX&quot;</code>  (新建一个名为XXX的页面)</p><p><code>hexo new &quot;title&quot;</code>  (新建一个名为title的文章)</p></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/12/hello-world/"/>
      <url>/2022/03/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
